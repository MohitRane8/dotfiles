# Script originally taken from https://github.com/ericmurphyxyz/dotfiles/blob/master/.config/lf/lfrc

# Basic Settings
set hidden true
set ignorecase true
set icons true
set previewer '~/.config/lf/preview.sh'

# Custom Functions
cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

# Archive bindings
cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

# Trash bindings
#cmd trash ${{
#  files=$(printf "$fx" | tr '\n' ';')
#  while [ "$files" ]; do
#    file=${files%%;*}
#
#    trash-put "$(basename "$file")"
#    if [ "$files" = "$file" ]; then
#      files=''
#    else
#      files="${files#*;}"
#    fi
#  done
#}}

#cmd restore_trash ${{
#  trash-restore
#}}

# Jump to file/directory using fzf
cmd fzf_jump ${{
    res="$(find . | fzf --reverse --header='Jump to location')"
    if [ -n "$res" ]; then
        if [ -d "$res" ]; then
            cmd="cd"
        else
            cmd="select"
        fi
        res="$(printf '%s' "$res" | sed 's/\\/\\\\/g;s/"/\\"/g')"
        lf -remote "send $id $cmd \"$res\""
    fi
}}

# Search in contents of file under current directory, and jump to the selected file
# TODO: show files with matching name first before file contents
cmd fzf_search ${{
    RG_PREFIX="rg --column --line-number --no-heading --color=always --smart-case "
    res="$(
        FZF_DEFAULT_COMMAND="$RG_PREFIX ''" \
            fzf --bind "change:reload:$RG_PREFIX {q} || true" \
            --ansi --layout=reverse --header 'Search in files' \
            | cut -d':' -f1 | sed 's/\\/\\\\/g;s/"/\\"/g'
    )"
    [ -n "$res" ] && lf -remote "send $id select \"$res\""
}}

# Find file/directory with fuzzy matching
# TODO: update this to use $EDITOR
#cmd fzf $EDITOR $(find . -name "$1" | fzf)
#cmd fzf $nvim $(find . -name "$1" | fzf)

# Bulk renaming
# Taken from https://github.com/gokcehan/lf/issues/149#issuecomment-470960434
cmd bulk-rename ${{
	index=$(mktemp /tmp/lf-bulk-rename-index.XXXXXXXXXX)
	if [ -n "${fs}" ]; then
		echo "$fs" > $index
	else
		echo "$(ls "$(dirname $f)" | tr ' ' "\n")" > $index
	fi
	index_edit=$(mktemp /tmp/lf-bulk-rename.XXXXXXXXXX)
	cat $index > $index_edit
	$EDITOR $index_edit
	if [ $(cat $index | wc -l) -eq $(cat $index_edit | wc -l) ]; then
		max=$(($(cat $index | wc -l)+1))
		counter=1
		while [ $counter -le $max ]; do
			a="$(cat $index | sed "${counter}q;d")"
			b="$(cat $index_edit | sed "${counter}q;d")"
			counter=$(($counter+1))
			
			[ "$a" = "$b" ] && continue
			[ -e "$b" ] && echo "File exists: $b" && continue
			mv "$a" "$b"
		done
	else
		echo "Number of lines must stay the same"
	fi
	rm $index $index_edit
}}

# Bindings
map x
map n

map au unarchive
#map ae $wine "$f"

# Basic Functions
map . set hidden!
#map xd trash
#map xr restore_trash
map p paste
map d cut
map y copy
map <enter> open
map R reload
map nf mkfile
map nd mkdir
map C clear
map f :fzf_search
#map f push :fzf<space>
map <c-f> :fzf_jump

# Bookmarks
map gd cd ~/dotfiles
# lf -remote "send $id cd \"$WINUSERDIR\""

